@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav me-3">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
            <a id="manage" class="nav-link customTextColor" style="cursor:default">Salut @UserManager.GetUserName(User).Substring(0, UserManager.GetUserName(User).IndexOf("@"))!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link customTextColor border-0">Deconectare</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link navbarCustomTextColor" id="register" asp-area="Identity" asp-page="/Account/Register">Înregistrare</a>
    </li>
    <li class="nav-item">
            <a class="nav-link navbarCustomTextColor" id="login" asp-area="Identity" asp-page="/Account/Login">Conectare</a>
    </li>
}
</ul>
